version: "3.8"

# Сети для связи между сервисами
networks:
  proxy:
    name: proxy
    external: true # Сеть proxy нужна: docker network create proxy
  internal:
    name: internal
    external: false

services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    command:
      - "--log.level=DEBUG" # Отладочные логи для поиска ошибок
      - "--api.insecure=false" # Отключаем дашборд Traefik
      - "--providers.docker=true" # Используем Docker для автоконфигурации
      - "--providers.docker.exposedbydefault=false" # Не открываем сервисы по умолчанию
      - "--providers.docker.network=proxy" # Используем сеть proxy
      - "--entrypoints.web.address=:80" # Порт HTTP
      - "--entrypoints.websecure.address=:443" # Порт HTTPS
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true" # Включаем Let's Encrypt
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=your-email@domain.com" # Укажи свой email
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json" # Где хранить сертификаты
    ports:
      - "80:80" # Открываем порт 80
      - "443:443" # Открываем порт 443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro" # Для связи с Docker
      - "./letsencrypt:/letsencrypt" # Папка для сертификатов рядом с yml
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)" # Перехват всех HTTP-запросов
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https" # Редирект на HTTPS
    networks:
      - proxy
    restart: unless-stopped # Перезапуск при сбоях
    # Исправляем права для acme.json
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "touch /letsencrypt/acme.json && chmod 600 /letsencrypt/acme.json && traefik"
    # Проверка здоровья
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 3

  3x-ui:
    image: ghcr.io/mhsanaei/3x-ui:latest
    container_name: 3x-ui
    hostname: aeza.elmir-kuba.ru
    volumes:
      - "./x-ui/db:/etc/x-ui" # Папка для базы данных рядом с yml
      - "./letsencrypt:/etc/letsencrypt:ro" # Доступ к сертификатам
    environment:
      - XRAY_VMESS_AEAD_FORCED=false # Отключаем принудительное AEAD
    tty: true
    networks:
      - proxy
      - internal
    labels:
      - "traefik.enable=true" # Включаем Traefik для сервиса
      - "traefik.http.routers.3x-ui.rule=Host(`aeza.elmir-kuba.ru`)" # Домен для 3x-ui
      - "traefik.http.routers.3x-ui.entrypoints=websecure" # Используем HTTPS
      - "traefik.http.routers.3x-ui.tls.certresolver=letsencrypt" # Автоматический SSL
      - "traefik.http.services.3x-ui.loadbalancer.server.port=2053" # Порт панели 3x-ui
    restart: unless-stopped # Перезапуск при сбоях
    # Проверка здоровья
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2053"]
      interval: 10s
      timeout: 5s
      retries: 3